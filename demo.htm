<html>
    <head>
        <title>Sideline demo</title>
        <script type="text/javascript" src="jquery-1.10.2.min.js"></script>
        <script type="text/javascript">
            $(function () {
                var s = "#sideline";
                var canvas = $(s)[0];
                var point,start,end, touchPoint = null;
                var ctx = canvas.getContext("2d");
                var leftRightLeft = $("#lrl");     
                var startStats = $("#start");     
                var endStats = $("#end");     
                var pointStats = $("#point");          
                
                $(s).mousedown(function(e) {
                    touchPoint = new P(e.pageX-canvas.offsetLeft-1, e.pageY-canvas.offsetTop-1);
                    drawPoint(touchPoint, 3);
                });
                $(s).mouseup(function(e) {
                    var upP = new P(e.pageX-canvas.offsetLeft-1, e.pageY-canvas.offsetTop-1);
                    if (withinTen(touchPoint, upP)) {
                        point = touchPoint;
                    }
                    else {
                        start = touchPoint;
                        end = upP;
                    }
                    leftRightLeft.text(areCrossed());
                    draw();
                });
                function withinTen(a, b) {
                    return Math.sqrt(Math.pow((a.x-b.x),2)+Math.pow((a.y-b.y),2)) < 10;
                }
                
/*                $(s).click(function(e) {
                    point = new P(e.pageX-canvas.offsetLeft-1, e.pageY-canvas.offsetTop-1);
                    leftRightLeft.text(areCrossed());
                    draw();
                });
                
                $(s).dblclick(function(e) {
                    if (end) {
                        start = new P(e.pageX-canvas.offsetLeft-1, e.pageY-canvas.offsetTop-1);
                        end = null;
                    }
                    else {
                        end = new P(e.pageX-canvas.offsetLeft-1, e.pageY-canvas.offsetTop-1);
                    }
                    draw();
                });*/
                function draw() {
                    ctx.clearRect(0, 0, canvas.width, canvas.height);
                    if (start) {
                        startStats.text("Start: "+start.toString());
                        if (end) {
                            endStats.text("End: "+end.toString());
                            drawLine(start, end);
                            if (point) {
                                pointStats.text("Point: "+point.toString());
                                drawLine(point, new P(0, point.y));
                            }
                        }
                        else {
                            drawPoint(start, 2);
                        }
                    }
                }
                function drawLine(startP, endP) {
                    drawPoint(startP, 3);
                    ctx.beginPath();
                    ctx.moveTo(startP.x, startP.y);
                    ctx.lineTo(endP.x, endP.y);
                    ctx.closePath();
                    ctx.stroke();
                }
                function drawPoint(p, rad) {
                    ctx.beginPath();
                    ctx.arc(p.x, p.y, rad, 0, 2*Math.PI, true);
                    ctx.fill();
                }
                function P(xCoordinate, yCoordinate) {
                    this.x = xCoordinate;
                    this.y = yCoordinate;
                    return {
                        x: xCoordinate,
                        y: yCoordinate,
                        toString: function() {
                            return "x: "+xCoordinate+" y: "+yCoordinate;
                        }
                    }
                }
                function calcRelativePosition(testP, endP1, endP2) {
                    if (! (testP && endP1 && endP2)) return "";
                    var position = ((endP2.x - endP1.x)*(testP.y - endP1.y) - (endP2.y - endP1.y)*(testP.x - endP1.x));
                    if (position > 0) {
                        return "Right";
                    }
                    if (position == 0) {
                        return "Colinear";
                    }
                    return "Left";
                }
                function isRight(testP, endP1, endP2) {
                    if (! (testP && endP1 && endP2)) return "";
                    var position = ((endP2.x - endP1.x)*(testP.y - endP1.y) - (endP2.y - endP1.y)*(testP.x - endP1.x));
                    if (position > 0) {
                        return true;
                    }
                    return false;
                }
                function areCrossed() {
                    if (! (point && end && start)) return "Need 3 points";
                    var tether = new P(0, point.y);
                    var posPoint = isRight(point, start, end);
                    var posTether = isRight(tether, start, end);
                    
                    var posStart = isRight(start, point, tether);
                    var posEnd = isRight(end, point, tether);
                    if ((posPoint != posTether) && (posStart != posEnd)) {
                        return true;
                    }
                    return false;
                }
            });

        </script>
        <style type="text/css">
            canvas { border: 1px solid black; }
        </style>
    </head>
    <body>
        <canvas id="sideline" width="150" height="150"></canvas>
        <div id="lrl"></div>
        <div id="stats">
            <div id="start"></div>
            <div id="end"></div>
            <div id="point"></div>
        </div>
    </body>
</html>